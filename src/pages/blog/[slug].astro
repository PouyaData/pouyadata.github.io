---
import BaseLayout from '~/layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { shouldPublishPost } from '~/utils/dateUtils';

export async function getStaticPaths() {
  const deploymentWeek = import.meta.env.DEPLOYMENT_WEEK;
  const allPosts: CollectionEntry<'blog'>[] = await getCollection('blog');

  // Filter posts based on deployment week
  const posts = allPosts.filter((post) =>
    shouldPublishPost(post.data.publishDate, deploymentWeek)
  );

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props as { post: CollectionEntry<'blog'> };
const { Content } = await post.render();
const { title, description, publishDate, author } = post.data;
---

<BaseLayout title={title} description={description}>
  <article class="post">
    <h1>{title}</h1>
    <p class="post-description">{description}</p>
    <p class="post-meta">
      <time datetime={publishDate.toISOString()}
        >{publishDate.toDateString()}</time
      > â€¢ {author}
    </p>
    <Content />
  </article>
</BaseLayout>
